# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lambda-pdf-generator-puppetter
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  profile: default
  layers:
    - !Ref HelveticaLambdaLayer
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: !Join ["/", [!GetAtt "PdfsBucket.Arn", "*"]]
layers:
  helvetica:
    path: layers
functions:
  hello:
    handler: handler.handler
    timeout: 900
    iamRoleStatementsInherit: true
resources:
  Resources:
    PdfsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: pdfs-output
        PublicAccessBlockConfiguration:
        # TODO: change that to allow only cms download
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ["*"]
              AllowedMethods: ["PUT", "GET"]
              AllowedOrigins: ["*"]
        LifecycleConfiguration:
          Rules:
            - AbortIncompleteMultipartUpload:
                DaysAfterInitiation: 1
              Status: Enabled
    # PdfsOriginAccessIdentity:
    #   Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    #   Properties:
    #     CloudFrontOriginAccessIdentityConfig:
    #       Comment: !Join ["-", ["access", "identity", !Ref PdfsBucket]]
    PdfsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref PdfsBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
            # TODO: change that to allow only cms download using urls
              Principal: "*"
              Condition:
                StringLike:
                  'aws:Referer':
                    # TODO: review this for other environments
                    - 'https://lite.movistarplus.es/*'
              Action:
                - s3:GetObject
              Resource: !Join ["/", [!GetAtt PdfsBucket.Arn, "*"]]
    # PdfsDistributionCachePolicy:
    #   Type: AWS::CloudFront::CachePolicy
    #   Properties:
    #     CachePolicyConfig:
    #       # Name: ${env:PROJECT}-${self:provider.stage}-assets-cache-policy
    #       Name: sample-dev-pdfs-cache-policy
    #       DefaultTTL: 86400 # 1 day
    #       MinTTL: 86400 # 1 day
    #       MaxTTL: 31536000 # 1 year
    #       ParametersInCacheKeyAndForwardedToOrigin:
    #         CookiesConfig:
    #           CookieBehavior: none
    #         HeadersConfig:
    #           HeaderBehavior: whitelist
    #           Headers:
    #             - Origin
    #             - Access-Control-Request-Method
    #             - Access-Control-Request-Headers
    #         QueryStringsConfig:
    #           QueryStringBehavior: none
    #         EnableAcceptEncodingGzip: true
    # PdfsDistributionOriginRequestPolicy:
    #   Type: AWS::CloudFront::OriginRequestPolicy
    #   Properties:
    #     OriginRequestPolicyConfig:
    #       Name: sample-dev-pdfs-origin-request-policy
    #       CookiesConfig:
    #         CookieBehavior: none
    #       HeadersConfig:
    #         HeaderBehavior: whitelist
    #         Headers:
    #           - Origin
    #           - Access-Control-Request-Method
    #           - Access-Control-Request-Headers
    #       QueryStringsConfig:
    #         QueryStringBehavior: none
    # PdfsDistribution:
    #   Type: AWS::CloudFront::Distribution
    #   Properties:
    #     DistributionConfig:
    #       Origins:
    #         - DomainName: !GetAtt PdfsBucket.RegionalDomainName
    #           Id: pdfsS3Origin
    #           S3OriginConfig:
    #             OriginAccessIdentity:
    #               !Join [
    #                 "/",
    #                 [
    #                   "origin-access-identity/cloudfront",
    #                   !Ref PdfsOriginAccessIdentity,
    #                 ],
    #               ]
    #       Enabled: true
    #       DefaultCacheBehavior:
    #         AllowedMethods:
    #           - GET
    #           - HEAD
    #           - OPTIONS
    #         CachedMethods:
    #           - GET
    #           - HEAD
    #           - OPTIONS
    #         TargetOriginId: pdfsS3Origin
    #         CachePolicyId: !GetAtt PdfsDistributionCachePolicy.Id
    #         OriginRequestPolicyId: !GetAtt PdfsDistributionOriginRequestPolicy.Id
    #         ViewerProtocolPolicy: redirect-to-https
    #       PriceClass: PriceClass_100
    #       ViewerCertificate:
    #         CloudFrontDefaultCertificate: true